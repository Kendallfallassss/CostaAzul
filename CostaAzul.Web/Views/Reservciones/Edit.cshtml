@model CostaAzul.API.Models.Entities.Reservacion
@{
    ViewData["Title"] = "Editar Reservación";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="text-warning">
                    <i class="fas fa-edit me-2"></i>
                    Editar Reservación #@Model.Id
                </h2>
                <a asp-action="MisReservas" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>
                    Volver
                </a>
            </div>

            <!-- Card del formulario -->
            <div class="card shadow-sm border-0 rounded-3">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0">
                        <i class="fas fa-cog me-2"></i>
                        Modificar Reservación
                    </h5>
                </div>
                
                <div class="card-body p-4">
                    <form asp-action="Edit" method="post" class="edit-reservation-form">
                        <input type="hidden" asp-for="Id" />
                        <input type="hidden" id="MontoCalculado" name="MontoCalculado" />

                        <!-- Alerta de disponibilidad -->
                        <div id="availability-alert" class="alert alert-danger d-none mb-4">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            <span id="availability-message">No hay disponibilidad para las fechas seleccionadas.</span>
                        </div>

                        <!-- Información actual -->
                        <div class="alert alert-info mb-4">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Reserva actual:</strong> 
                            Del @Model.FechaInicio.ToString("dd/MM/yyyy") al @Model.FechaFin.ToString("dd/MM/yyyy") 
                            para @Model.CantidadPersonas persona@(Model.CantidadPersonas > 1 ? "s" : "")
                        </div>

                        <!-- Selección de habitación -->
                        <div class="mb-4">
                            <label asp-for="HabitacionId" class="form-label fw-bold">
                                <i class="fas fa-door-open me-2"></i>
                                Habitación
                            </label>
                            <select asp-for="HabitacionId" class="form-select form-select-lg" id="HabitacionId" required>
                                <option value="">-- Seleccione una habitación --</option>
                                @foreach (var hab in (IEnumerable<SelectListItem>)ViewBag.Habitaciones)
                                {
                                    <option value="@hab.Value"
                                            data-precio="@hab.Text.Split('₡').LastOrDefault()?.Trim().Replace(" por persona", "")"
                                            @@(Model.HabitacionId.ToString() == hab.Value ? "selected" : "")>
                                        @hab.Text
                                    </option>
                                }
                            </select>
                            <span asp-validation-for="HabitacionId" class="text-danger"></span>
                        </div>

                        <!-- Fechas -->
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="FechaInicio" class="form-label fw-bold">
                                    <i class="fas fa-calendar me-2"></i>
                                    Fecha de Entrada
                                </label>
                                <input asp-for="FechaInicio" type="date" class="form-control form-control-lg" required />
                                <span asp-validation-for="FechaInicio" class="text-danger"></span>
                            </div>
                            
                            <div class="col-md-6 mb-3">
                                <label asp-for="FechaFin" class="form-label fw-bold">
                                    <i class="fas fa-calendar-check me-2"></i>
                                    Fecha de Salida
                                </label>
                                <input asp-for="FechaFin" type="date" class="form-control form-control-lg" required />
                                <span asp-validation-for="FechaFin" class="text-danger"></span>
                            </div>
                        </div>

                        <!-- Información de estadía actualizada -->
                        <div id="stay-info" class="alert alert-light mb-4">
                            <div class="row text-center">
                                <div class="col-md-4">
                                    <i class="fas fa-moon text-primary fs-5"></i>
                                    <div class="fw-bold mt-1" id="nights-count">Calculando...</div>
                                </div>
                                <div class="col-md-4">
                                    <i class="fas fa-calendar-day text-info fs-5"></i>
                                    <div class="fw-bold mt-1" id="checkin-date">-</div>
                                </div>
                                <div class="col-md-4">
                                    <i class="fas fa-calendar-times text-warning fs-5"></i>
                                    <div class="fw-bold mt-1" id="checkout-date">-</div>
                                </div>
                            </div>
                        </div>

                        <!-- Cantidad de personas -->
                        <div class="mb-4">
                            <label asp-for="CantidadPersonas" class="form-label fw-bold">
                                <i class="fas fa-users me-2"></i>
                                Número de Huéspedes
                            </label>
                            <input asp-for="CantidadPersonas" class="form-control form-control-lg" 
                                   type="number" min="1" max="10" id="CantidadPersonas" required />
                            <span asp-validation-for="CantidadPersonas" class="text-danger"></span>
                        </div>

                        <!-- Monto total -->
                        <div class="mb-4">
                            <label class="form-label fw-bold">
                                <i class="fas fa-calculator me-2"></i>
                                Monto Total Actualizado
                            </label>
                            <div class="total-display p-3 bg-light rounded">
                                <div class="row align-items-center">
                                    <div class="col-md-8">
                                        <input type="text" class="form-control-plaintext fs-4 fw-bold text-warning" 
                                               id="MontoVisible" readonly value="Calculando..." />
                                        <small class="text-muted" id="calculation-detail">Actualizando cálculo...</small>
                                    </div>
                                    <div class="col-md-4 text-end">
                                        <i class="fas fa-edit text-warning fs-2"></i>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <hr class="my-4">

                        <!-- Botones -->
                        <div class="d-flex justify-content-between">
                            <a asp-action="MisReservas" class="btn btn-outline-secondary btn-lg">
                                <i class="fas fa-times me-2"></i>
                                Cancelar
                            </a>
                            <button type="submit" class="btn btn-warning btn-lg text-dark fw-bold" id="btnGuardar">
                                <i class="fas fa-save me-2"></i>
                                Guardar Cambios
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Información de edición -->
            <div class="mt-4">
                <div class="alert alert-warning border-0">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Atención:</strong> Los cambios en las fechas o cantidad de personas pueden afectar el monto total de la reserva.
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Estilos específicos para edición de reserva */
    .edit-reservation-form {
        /* Sin efectos complejos */
    }

    .form-control-lg, .form-select-lg {
        border: 2px solid #dee2e6;
        transition: border-color 0.3s ease;
    }

    .form-control-lg:focus, .form-select-lg:focus {
        border-color: #ffc107;
        box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.25);
    }

    .total-display {
        border: 2px solid #ffc107;
        background: linear-gradient(135deg, #fff8db, #ffeaa7);
    }

    .form-control-plaintext {
        border: none !important;
        background: transparent !important;
    }

    #btnGuardar {
        min-width: 200px;
        border-color: #ffc107;
        background-color: #ffc107;
    }

    #btnGuardar:hover:not(:disabled) {
        background-color: #ffca2c;
        border-color: #ffc720;
        color: #000 !important;
    }

    #btnGuardar:disabled {
        background-color: #6c757d;
        border-color: #6c757d;
        color: #fff !important;
        cursor: not-allowed;
    }

    .card {
        transition: box-shadow 0.3s ease;
    }

    .card:hover {
        box-shadow: 0 8px 20px rgba(0,0,0,0.1) !important;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .d-flex.justify-content-between {
            flex-direction: column;
            gap: 1rem;
        }

        .btn-lg {
            width: 100%;
        }

        h2 {
            font-size: 1.5rem;
        }
    }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Formulario de edición de reservación inicializado');
            
            // Referencias a elementos
            const selectHabitacion = document.getElementById("HabitacionId");
            const inputFechaInicio = document.getElementById("FechaInicio");
            const inputFechaFin = document.getElementById("FechaFin");
            const inputPersonas = document.getElementById("CantidadPersonas");
            const inputMontoVisible = document.getElementById("MontoVisible");
            const inputHiddenMonto = document.getElementById("MontoCalculado");
            const alertaDisponibilidad = document.getElementById("availability-alert");
            const botonGuardar = document.getElementById("btnGuardar");
            const form = document.querySelector('.edit-reservation-form');

            // Verificar disponibilidad
            async function verificarDisponibilidad() {
                const habitacionId = selectHabitacion.value;
                const inicio = inputFechaInicio.value;
                const fin = inputFechaFin.value;
                const idReservacion = "@Model.Id";
                const personas = inputPersonas.value;

                if (!habitacionId || !inicio || !fin || !personas) {
                    alertaDisponibilidad.classList.add("d-none");
                    return true;
                }

                try {
                    const response = await fetch(`/Reservaciones/Disponibilidad?habitacionId=${habitacionId}&inicio=${inicio}&fin=${fin}&reservacionId=${idReservacion}&cantidadPersonas=${personas}`);
                    const data = await response.json();

                    if (!data.disponible) {
                        alertaDisponibilidad.classList.remove("d-none");
                        document.getElementById("availability-message").textContent = data.mensaje || "No hay disponibilidad para las fechas seleccionadas.";
                        botonGuardar.disabled = true;
                        return false;
                    } else {
                        alertaDisponibilidad.classList.add("d-none");
                        botonGuardar.disabled = false;
                        return true;
                    }
                } catch (error) {
                    console.error('Error verificando disponibilidad:', error);
                    alertaDisponibilidad.classList.remove("d-none");
                    document.getElementById("availability-message").textContent = "Error al verificar disponibilidad.";
                    botonGuardar.disabled = true;
                    return false;
                }
            }

            // Calcular monto y actualizar información
            function calcularMonto() {
                const selectedOption = selectHabitacion.selectedOptions[0];
                const precioText = selectedOption?.getAttribute("data-precio") || "0";
                const precio = parseFloat(precioText.replace(/[^\d.-]/g, "")) || 0;
                const personas = parseInt(inputPersonas.value || "0");
                const inicio = inputFechaInicio.value;
                const fin = inputFechaFin.value;

                // Resetear si faltan datos
                if (!precio || !personas || !inicio || !fin) {
                    inputMontoVisible.value = "Completar datos";
                    inputHiddenMonto.value = "";
                    document.getElementById('calculation-detail').textContent = "Completa todos los campos";
                    return;
                }

                // Calcular fechas y noches
                const fechaInicio = new Date(inicio);
                const fechaFin = new Date(fin);
                const diffTime = fechaFin - fechaInicio;
                const noches = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

                // Actualizar información de estadía
                if (noches > 0) {
                    document.getElementById('nights-count').textContent = `${noches} ${noches === 1 ? 'noche' : 'noches'}`;
                    document.getElementById('checkin-date').textContent = fechaInicio.toLocaleDateString('es-CR');
                    document.getElementById('checkout-date').textContent = fechaFin.toLocaleDateString('es-CR');
                    
                    // Calcular total
                    const total = precio * personas * noches;
                    inputMontoVisible.value = `₡${total.toLocaleString()}`;
                    inputHiddenMonto.value = total;
                    document.getElementById('calculation-detail').textContent = 
                        `₡${precio.toLocaleString()} × ${personas} persona${personas > 1 ? 's' : ''} × ${noches} noche${noches > 1 ? 's' : ''}`;
                } else {
                    inputMontoVisible.value = "Fechas inválidas";
                    inputHiddenMonto.value = "";
                    document.getElementById('calculation-detail').textContent = "La fecha de salida debe ser posterior a la de entrada";
                    document.getElementById('nights-count').textContent = "Fechas inválidas";
                    document.getElementById('checkin-date').textContent = "-";
                    document.getElementById('checkout-date').textContent = "-";
                }
            }

            // Validar todo
            async function validarTodo() {
                calcularMonto();
                await verificarDisponibilidad();
            }

            // Event listeners
            selectHabitacion.addEventListener("change", validarTodo);
            inputFechaInicio.addEventListener("change", validarTodo);
            inputFechaFin.addEventListener("change", validarTodo);
            inputPersonas.addEventListener("input", validarTodo);

            // Validar fechas mínimas
            const today = new Date().toISOString().split('T')[0];
            inputFechaInicio.setAttribute('min', today);
            
            inputFechaInicio.addEventListener('change', function() {
                inputFechaFin.setAttribute('min', this.value);
            });

            // Manejar envío del formulario
            form.addEventListener('submit', function(e) {
                if (botonGuardar.disabled) {
                    e.preventDefault();
                    alert('No se puede guardar la reserva. Verifica la disponibilidad y los datos ingresados.');
                    return false;
                }

                if (!confirm('¿Estás seguro de que deseas guardar los cambios en esta reservación?')) {
                    e.preventDefault();
                    return false;
                }

                botonGuardar.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Guardando...';
                botonGuardar.disabled = true;
            });

            // Inicializar
            setTimeout(validarTodo, 100);
        });
    </script>
}